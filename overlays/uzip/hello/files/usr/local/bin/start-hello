#!/bin/sh

# This script is intended to be invoked by a desktop file
# from /usr/local/share/xsessions
# where the display manager (login window) picks it up

# Enable FUSE and allow non-root users to mount, which gvfs requires to work
# FIXME: Remove the need for those lines in this script; how?
# FIXME: It will not work in installed mode like this, because the user may not be able to use sudo without entering a password
sudo sysctl vfs.usermount=1 || true
sudo kldload fuse.ko || true # FreeBSD up to 12.x
sudo kldload fusefs.ko || true # FreeBSD 13+, violates POLA

# Start D-Bus and export DBUS_SESSION_BUS_ADDRESS;
# this is needed for D-Bus Activation to work, which gvfs requires to work
if [ -z $DBUS_SESSION_BUS_ADDRESS ] ; then
  export $(dbus-launch)
fi

# Set locale if it is not set already
# and if /usr/local/var/localize/include exists
# (might have been created by the localize script during boot)
# On FreeBSD before 13, $LANG is unset. Starting with 13, it is "C.UTF-8" when it is not specified. This is not POLA
if [ -z "${LANG}" ] || [ "C.UTF-8" = "${LANG}" ]  ; then
  if [ -e "/usr/local/var/localize/include" ] ; then
    . /usr/local/var/localize/include
    export LANG
    export MM_CHARSET
    export TZ # This leads to correct time, and to time/date formatting
    COUNTRY=$(echo "${LANG}" | cut -d _ -f 2 | cut -d "." -f 1 | tr '[A-Z]' '[a-z]')
    setxkbmap -layout "${COUNTRY}"
    setxkbmap -variant nodeadkeys 2>/dev/null
    setxkbmap -query
  fi
fi

# Load our custom keyboard settings:
# Swap Ctrl and Alt keys
# TODO: Do something different when an Apple keyboard is attached;
# can we find this out without sudo? usbconfig seems to need sudo
# https://github.com/helloSystem/hello/issues/46
xmodmap /usr/local/etc/xdg/Xmodmap

# Export XDG environment variables,
# these may be used by applications that run inside the desktop session

HERE="$(dirname "$(readlink -f "${0}")")"

export XDG_CACHE_HOME=~/.cache
export XDG_CONFIG_DIRS=/etc:/usr/local/etc/xdg:/usr/share:/usr/local/share
export XDG_CONFIG_HOME=~/.config
export XDG_DATA_DIRS=~/.local/share:/usr/local/share:/usr/share
export XDG_DATA_HOME=~/.local/share
export XDG_SESSION_CLASS=user
export XDG_SESSION_TYPE=x11

##################
# Global menus for Gtk applications
# 
# https://github.com/rilian-la-te/vala-panel-appmenu/blob/master/subprojects/appmenu-gtk-module/README.md
##################

if [ -n "$GTK_MODULES" ]; then
    GTK_MODULES="${GTK_MODULES}:appmenu-gtk-module"
else
    GTK_MODULES="appmenu-gtk-module"
fi

if [ -z "$UBUNTU_MENUPROXY" ]; then
    UBUNTU_MENUPROXY=1
fi

export GTK_MODULES
export UBUNTU_MENUPROXY

# Export other environment variables
export QT_QPA_PLATFORMTHEME=panda

# Export high-DPI settings:
# QT_ENABLE_HIGHDPI_SCALING sice Qt 5.14 enables automatic scaling
# based on the pixel density of the monitor.
# Replaces QT_AUTO_SCREEN_SCALE_FACTOR.
# https://lists.qt-project.org/pipermail/development/2019-September/037434.html
export QT_ENABLE_HIGHDPI_SCALING=1 # Does not really seem to do anything?
# export GDK_SCALE=2 # Working, but only for ints
# export GDK_DPI_SCALE=1.5 # Not working

# Launch per-user daemons

# Possibly set the clock from the network?

# Global keyboard shortcuts
# It reads its configuration from
# ${XDG_CONFIG_HOME}/lxqt/globalkeyshortcuts.conf
# --config-file=FILENAME can be used several times, the last one is used for saving
# TODO: Move this functionality into Menu?
/usr/local/bin/lxqt-globalkeysd &

# Drop shadows
/usr/local/bin/picom --dbus &

# Window decorations
/usr/local/bin/openbox --config-file ~/.openbox &

# Desktop
/System/Filer.AppDir/usr/bin/filer-qt --desktop & # FIXME: Use AppRun

# Desktop notifications
dunst &

# Sound mixer on FreeBSD; would need a space to show tray icons in Menubar;
# should possibly be launched by it if available?
# dsbmixer -i
# Battery monitor, same
# dsbbatmon
# Same for
# dsbmc

# Welcome intro video and music
# /Applications/Welcome.AppDir/AppRun

# Menubar
export GTK_MODULES=appmenu-gtk-module
/System/Menu.AppDir/usr/bin/menubar & # FIXME: Use AppRun

# FIXME: Does the next line have to run AFTER menubar?
# Else we see no QMenus at all, as if something was badly crashing?
### "${HERE}"/dde-globalmenu-service & # gmenudbusmenuproxy without Plasma deps
gmenudbusmenuproxy &

# Dock
# /System/Dock.AppDir/AppRun & # FIXME: Reinstate once it works like this
/System/Dock.AppDir/usr/bin/cyber-dock

# Welcome Wizard
# /Applications/Welcome.AppDir/trivialwizard

# Variable color temperature
# without getlalo it would use network locatization from geoclue2,
# with getlalo it gets the location from /var/db/zoneinfo
# which we probably should set in the Welcome Wizard
redshift -l$(getlalo) &

# System-wide autostart
for APP in /Applications/Autostart/* ; do
  echo "Autostarting ${APP}"
  launch "${APP}" &
done
# Per-user autostart
# for APP in ~/Applications/Autostart/* ; do
#   echo "Autostarting ${APP}"
#   launch "${APP}" &
# done

# Here we must start something that never exits;
# the session ends when that thing exits
read 1
